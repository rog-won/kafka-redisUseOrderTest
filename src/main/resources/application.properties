spring.application.name=kafkaorder
server.port=8085
# 모든 IP에서 접근 허용
server.address=0.0.0.0

# 네트워크 관련 설정
# 타임아웃 설정
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=15000

# CORS 설정 (개발 환경)
cors.allowed-origins=*
cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# 방화벽 우회를 위한 설정
server.forward-headers-strategy=native

# Kafka settings
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Redis settings
spring.data.redis.host=localhost
spring.data.redis.port=6379

# JPA 설정
# 스키마 업데이트를 위해 update 모드 사용
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# 외래 키 제약 조건 DDL 생성 허용
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# SQL 로그 설정
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# 파일 업로드 관련 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# 파일 저장 경로 (기본값: ./uploads/images)
file.upload-dir=./uploads/images

# 스프링 시큐리티 디버그 로그 활성화
logging.level.org.springframework.security=DEBUG

# 에러 로그 파일 저장 설정
app.error-log.directory=./logs/errors

# 개발 프로필 설정
spring.profiles.active=dev